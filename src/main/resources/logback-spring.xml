<?xml version="1.0" encoding="UTF-8"?>

<configuration scan="true" scanPeriod="60 seconds" debug="false">
	<!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径 -->
	<!--<property name="LOG_HOME" value="/app/jar/logs"/>-->
	<property name="LOG_HOME" value="/Users/adam/IdeaProjects/struct_util/logs"/>
    <property name="APP_NAME" value="struct_util" />

	<contextName>${APP_NAME}</contextName>

	<!--输出到控制台 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} | %thread | %-5level | %class{200} | %file\(%line\) | %msg%n</pattern>
		</encoder>
	</appender>

	<!-- error日志 -->
	<!-- 按日期滚动日志 -->
	<appender name="ERROR-OUT" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 日志存放位置 -->
		<file>${LOG_HOME}/error/${APP_NAME}-error.log</file>
		<encoder>
			<pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} | %thread | %-5level | %class{200} | %file\(%line\) | %msg%n</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>ERROR</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_HOME}/error/${APP_NAME}-error.%d{yyyy-MM-dd}.log.zip</fileNamePattern>
			<!-- 保存30天历史 -->
			<maxHistory>30</maxHistory>
		</rollingPolicy>
	</appender>

	<!-- info日志 -->
	<!-- 按文件大小滚动日志 -->
	<appender name="INFO-OUT" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_HOME}/info/${APP_NAME}-info.log</file>
		<encoder>
			<pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} | %thread | %-5level | %class{200} | %file\(%line\) | %msg%n</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>INFO</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<fileNamePattern>${LOG_HOME}/info/${APP_NAME}-info.%i.log</fileNamePattern>
			<minIndex>1</minIndex>
			<maxIndex>3</maxIndex>
		</rollingPolicy>
		<triggeringPolicy
				class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<maxFileSize>5MB</maxFileSize>
		</triggeringPolicy>
	</appender>

	<!-- debug日志 -->
	<!-- 按日期和大小滚动日志 -->
	<appender name="DEBUG-OUT" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_HOME}/debug/${APP_NAME}-debug.log</file>
		<encoder>
			<pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} | %thread | %-5level | %class{200} | %file\(%line\) | %msg%n</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>DEBUG</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_HOME}/debug/${APP_NAME}-debug-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
					class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>100MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
	</appender>

	<!-- warn日志 -->
	<!-- 按日期和大小滚动日志 -->
	<appender name="WARN-OUT" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_HOME}/warn/${APP_NAME}-warn.log</file>
		<encoder>
			<pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} | %thread | %-5level | %class{200} | %file\(%line\) | %msg%n</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>WARN</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_HOME}/warn/${APP_NAME}-warn-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
					class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>100MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>30</maxHistory>
		</rollingPolicy>
	</appender>



	<!-- 不输出日志：识别过程中的一堆日志 -->
<!--	<logger name="org.apache.http" level="OFF"></logger>-->

	<!--mybatis log configure-->
	<logger name="org.mybatis.spring" level="INFO"/>
	<logger name="org.mybatis.spring.mapper.MapperScannerConfigurer" level="ERROR"/>
	<logger name="org.mybatis.spring.SqlSessionFactoryBean" level="ERROR"/>
	<logger name="org.mybatis.spring.SqlSessionUtils" level="INFO"/>

	<logger name="org.springframework.web.method" level="DEBUG" />
	<logger name="org.springframework" level="ERROR"/>
	<logger name="org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver" level="ERROR"/>
	<logger name="org.springframework.boot.StartupInfoLogger" level="ERROR" />

	<logger name="ch.qos.logback" level="ERROR"/>
	<logger name="ch.qos.logback.core.joran.action.AppenderAction" level="ERROR"/>
	<logger name="ch.qos.logback.core.joran.action.NestedComplexPropertyIA" level="ERROR"/>
	<logger name="ch.qos.logback.classic.joran.action.ConfigurationAction" level="ERROR"/>

	<logger name="org.apache.commons.httpclient.HttpClient" level="ERROR"/>
	<logger name="org.apache.commons.httpclient" level="ERROR"/>
	<logger name="org.apache.commons.httpclient.HttpConnection" level="ERROR"/>

	<logger name="org.apache.http.impl.client.DefaultHttpClient" level="ERROR"/>
	<logger name="org.apache.http.impl.conn.DefaultClientConnection" level="ERROR"/>
	<logger name="org.apache.http.client.protocol" level="ERROR"/>
	<logger name="org.apache.ibatis.logging.LogFactory" level="ERROR"/>
	<logger name="org.apache.commons.beanutils" level="ERROR"/>
	<logger name="org.apache.http.headers" level="ERROR"/>
	<logger name="org.apache.zookeeper.ClientCnxn" level="ERROR"/>
	<logger name="org.apache.activemq.transport.AbstractInactivityMonitor" level="ERROR"/>

	<logger name="com.alibaba.dubbo.common.logger.log4j" level="ERROR"/>
	<logger name="com.alibaba.dubbo.common.extension.ExtensionLoader" level="ERROR"/>
	<logger name="net.rubyeye.xmemcached.impl" level="ERROR"/>
	<logger name="com.google.code.yanf4j.core.impl.AbstractSession" level="ERROR"/>
	<logger name="java.sql.ResultSet" level="INFO"/>


	<!-- 配置好前面对应的appender -->
	<root level="INFO">
		<appender-ref ref="STDOUT"/>
		<appender-ref ref="ERROR-OUT"/>
		<appender-ref ref="INFO-OUT"/>
		<appender-ref ref="WARN-OUT"/>
		<appender-ref ref="DEBUG-OUT"/>

	</root>

</configuration>